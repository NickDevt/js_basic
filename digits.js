//Всякие конкретные штуки лучше гуглить
//Разумеется есть стандартные свойства языка для работы с числами
//Всякие методы .pow итдитдитд
//В принципе, можно создать интегер, нажать точку и посмотреть какие будут предложены
//варианты обработки

//Типы в js (хз конечно нужно ли это писать)

const num = 1 //integer
const float = 1.1 //float
const pow = 10e3 // степень что ли
const inf = Infinity // Есть положительная и отрицательная бесконечность. Делить на 0 можно
const nan = NaN // Число, которое не число (Not a Number) Получить можно например поделив 0 / undefined или строку
const he = 0 / 'dw'
console.log(he) //NaN
//Для проверки на подтип есть .isNaN() .isFinite() итд

//Как и в питоне, при сложении строки с числом будет конкатенация
//Тем не менее, есть спец функция для приведения строки к числу
const strInt = Number.parseInt('32')
console.log(strInt) // лаконичность прет конечно, но есть варианты:
// Number('32')
// +variable_name   то есть указание что число положительно - есть указание на число

//Для float используем parseFloat

//Js тот самый язык, где сложение 0.2 + 0.4 итд вызывает баг
//Фиксится это относительно:
console.log(parseFloat((0.2 + 0.4).toFixed(1)))
//То есть мы во-первых, обрезаем полученное значение, во-вторых приводим к дробному числу

bigInt = 1455678956789567895678n  // Надо дописать n в конце числа чтобы оно стало bigInt
// Любопытно, что современный JS уже не требует обозначать тип переменной (как в питоне)
console.log(bigInt) // тип bigInt
console.log(typeof bigInt)

